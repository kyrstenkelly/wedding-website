// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Countdown /> matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Countdown
    date={"2020-10-10T05:00:00.000Z"}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="unit"
>
          <div
                    className="unit-value"
          >
                    11
          </div>
          <div
                    className="unit-label"
          >
                    months
          </div>
</div>,
        <div
          className="unit"
>
          <div
                    className="unit-value"
          >
                    24
          </div>
          <div
                    className="unit-label"
          >
                    days
          </div>
</div>,
        <div
          className="unit"
>
          <div
                    className="unit-value"
          >
                    15
          </div>
          <div
                    className="unit-label"
          >
                    hours
          </div>
</div>,
      ],
      "className": "countdown",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "months",
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="unit-value"
>
              11
</div>,
            <div
              className="unit-label"
>
              months
</div>,
          ],
          "className": "unit",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": 11,
              "className": "unit-value",
            },
            "ref": null,
            "rendered": 11,
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "months",
              "className": "unit-label",
            },
            "ref": null,
            "rendered": "months",
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": "days",
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="unit-value"
>
              24
</div>,
            <div
              className="unit-label"
>
              days
</div>,
          ],
          "className": "unit",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": 24,
              "className": "unit-value",
            },
            "ref": null,
            "rendered": 24,
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "days",
              "className": "unit-label",
            },
            "ref": null,
            "rendered": "days",
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": "hours",
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="unit-value"
>
              15
</div>,
            <div
              className="unit-label"
>
              hours
</div>,
          ],
          "className": "unit",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": 15,
              "className": "unit-value",
            },
            "ref": null,
            "rendered": 15,
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "hours",
              "className": "unit-label",
            },
            "ref": null,
            "rendered": "hours",
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="unit"
>
            <div
                        className="unit-value"
            >
                        11
            </div>
            <div
                        className="unit-label"
            >
                        months
            </div>
</div>,
          <div
            className="unit"
>
            <div
                        className="unit-value"
            >
                        24
            </div>
            <div
                        className="unit-label"
            >
                        days
            </div>
</div>,
          <div
            className="unit"
>
            <div
                        className="unit-value"
            >
                        15
            </div>
            <div
                        className="unit-label"
            >
                        hours
            </div>
</div>,
        ],
        "className": "countdown",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "months",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="unit-value"
>
                11
</div>,
              <div
                className="unit-label"
>
                months
</div>,
            ],
            "className": "unit",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": 11,
                "className": "unit-value",
              },
              "ref": null,
              "rendered": 11,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "months",
                "className": "unit-label",
              },
              "ref": null,
              "rendered": "months",
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": "days",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="unit-value"
>
                24
</div>,
              <div
                className="unit-label"
>
                days
</div>,
            ],
            "className": "unit",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": 24,
                "className": "unit-value",
              },
              "ref": null,
              "rendered": 24,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "days",
                "className": "unit-label",
              },
              "ref": null,
              "rendered": "days",
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": "hours",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="unit-value"
>
                15
</div>,
              <div
                className="unit-label"
>
                hours
</div>,
            ],
            "className": "unit",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": 15,
                "className": "unit-value",
              },
              "ref": null,
              "rendered": 15,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "hours",
                "className": "unit-label",
              },
              "ref": null,
              "rendered": "hours",
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": false,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": true,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
